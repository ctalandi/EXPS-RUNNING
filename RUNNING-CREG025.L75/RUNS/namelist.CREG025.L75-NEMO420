!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!! NEMO/OCE :   Reference namelist_ref                                !!
!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!! NEMO/OCE  :  1 - Domain & run manager (namrun, namcfg, namdom, namtsd, namcrs, namc1d, namc1d_uvd)
!! namelists    2 - Surface boundary (namsbc, namsbc_flx, namsbc_blk, namsbc_cpl,
!!                                    namsbc_sas, namtra_qsr, namsbc_rnf,
!!                                    namisf, namsbc_apr, 
!!                                    namsbc_ssr, namsbc_wave, namberg)
!!              3 - lateral boundary (namlbc, namagrif, nambdy, nambdy_tide)
!!              4 - top/bot boundary (namdrg, namdrg_top, namdrg_bot, nambbc, nambbl)
!!              5 - Tracer           (nameos, namtra_adv, namtra_ldf, namtra_eiv, namtra_dmp)
!!              6 - dynamics         (namdyn_adv, namdyn_vor, namdyn_hpg, namdyn_spg, namdyn_ldf)
!!              7 - Vertical physics (namzdf, namzdf_ric, namzdf_tke, namzdf_gls, namzdf_iwm)
!!              8 - diagnostics      (namnc4, namtrd, namspr, namflo, namhsb)
!!              9 - Obs & Assim      (namobs, nam_asminc)
!!             10 - miscellaneous    (nammpp, namctl, namsto)
!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

!!======================================================================
!!              ***  Domain & Run management namelists  ***           !!
!!                                                                    !!
!!   namrun       parameters of the run
!!   namdom       space and time domain
!!   namcfg       parameters of the configuration                       (default: user defined GYRE)
!!   namwad       Wetting and drying                                    (default: OFF)
!!   namtsd       data: temperature & salinity                          (default: OFF)
!!   namcrs       coarsened grid (for outputs and/or TOP)               (ln_crs =T)
!!   namc1d       1D configuration options                              (ln_c1d =T)
!!   namc1d_dyndmp 1D newtonian damping applied on currents             (ln_c1d =T)
!!   namc1d_uvd   1D data (currents)                                    (ln_c1d =T)
!!======================================================================
!
!-----------------------------------------------------------------------
&namrun        !   parameters of the run
!-----------------------------------------------------------------------
   nn_no       =   <NN_NO> !  Assimilation cycle index
   cn_exp      =  "CREG025.L75-NEMO420"    !  experience name
   nn_it000    =  <NIT000>   !  first time step
   nn_itend    =  <NITEND>   !  last  time step (std 5475)
   nn_date0    =  19790101 !  date at nit_0000 (format yyyymmdd) used if ln_rstart=F or (ln_rstart=T and nn_rstctl=0 or 1)
   nn_time0    =       0   !  initial time of day in hhmm
   nn_leapy    =       0   !  Leap year calendar (1) or not (0)
   ln_rstart   = <RESTART> !  start from rest (F) or from a restart file (T)
      ln_1st_euler = .false.  !  =T force a start with forward time step (ln_rstart=T)
      nn_rstctl    =    2     !  restart control ==> activated only if ln_rstart=T
      !                          !    = 0 nn_date0 read in namelist ; nn_it000 : read in namelist
      !                          !    = 1 nn_date0 read in namelist ; nn_it000 : check consistancy between namelist and restart
      !                          !    = 2 nn_date0 read in restart  ; nn_it000 : check consistancy between namelist and restart
      cn_ocerst_in  = "<OCERST_IN>"    !  suffix of ocean restart name (input)
      cn_ocerst_indir = "<CN_IN_OCERST>"       !  directory from which to read input ocean restarts
      cn_ocerst_out = "<OCERST_OUT>"   !  suffix of ocean restart name (output)
      cn_ocerst_outdir = "<CN_OUT_OCERST>"      !  directory in which to write output ocean restarts
   nn_istate   =       0   !  output the initial state (1) or not (0)
   ln_rst_list = .false.   !  output restarts at list of times using nn_stocklist (T) or at set frequency with nn_stock (F)
   nn_stock    =       0   !  used only if ln_rst_list = F: output restart freqeuncy (modulo referenced to 1)
      !                          !    =  0 force to write restart files only at the end of the run
      !                          !    = -1 do not do any restart
   nn_stocklist = 0,0,0,0,0,0,0,0,0,0 ! List of timesteps when a restart file is to be written
   nn_write    =       0   !  used only if key_xios is not defined: output frequency (modulo referenced to nn_it000)
      !                          !    =  0 force to write output files only at the end of the run
      !                          !    = -1 do not do any output file
   ln_mskland  = .true.    !  mask land points in NetCDF outputs
   ln_cfmeta   = .false.   !  output additional data to netCDF files required for compliance with the CF metadata standard
   ln_clobber  = .true.    !  clobber (overwrite) an existing file
   nn_chunksz  =       0   !  chunksize (bytes) for NetCDF file (works only with iom_nf90 routines)
   ln_xios_read = .false.  !  use XIOS to read restart file (only for a single file restart)
   nn_wxios = 0      !  use XIOS to write restart file 0 - no, 1 - single file output, 2 - multiple file output
/
!-----------------------------------------------------------------------
&namdom        !   time and space domain
!-----------------------------------------------------------------------
   ln_linssh   = .true.    !  =T  linear free surface  ==>>  model level are fixed in time
   !
   rn_Dt       =  720.     !  time step for the dynamics and tracer
   rn_atfp     =    0.1    !  asselin time filter parameter
   !
   ln_crs      = .false.   !  Logical switch for coarsening module      (T => fill namcrs)
   ln_c1d      = .false.   !  Single column domain (1x1pt)              (T => fill namc1d)
   !
   ln_meshmask = .false.   !  =T create a mesh file
/
!-----------------------------------------------------------------------
&namcfg        !   parameters of the configuration                      (default: use namusr_def in namelist_cfg)
!-----------------------------------------------------------------------
   ln_read_cfg = .true.     !  (=T) read the domain configuration file
      !                      !  (=F) user defined configuration           (F => create/check namusr_def)
      cn_domcfg = "CREG025.L75_domain_cfg"  ! domain configuration filename
      !
      ln_closea    = .false. !  (=T => fill namclo) 
      !                      !  (=F) no control of net precip/evap over closed sea
      !
   ln_write_cfg = .false.    !  (=T) create the domain configuration file
      cn_domcfg_out = "domain_cfg_out" ! newly created domain configuration filename
      !
   ln_use_jattr = .false.    !  use (T) the file attribute: open_ocean_jstart, if present
   !                         !  in netcdf input files, as the start j-row for reading
/
!-----------------------------------------------------------------------
&namtile        !   parameters of the tiling
!-----------------------------------------------------------------------
   ln_tile = .false.     !  Use tiling (T) or not (F)
   nn_ltile_i = 99999    !  Length of tiles in i
   nn_ltile_j = 10       !  Length of tiles in j
/
!-----------------------------------------------------------------------
&namclo        !   parameters of the closed sea (cs) behavior                (default: OFF)
!-----------------------------------------------------------------------
   ln_maskcs = .false.        ! (=T) cs are masked ; So, in this case ln_mask_csundef and ln_clo_rnf have no effect.
      !                       ! (=F => set ln_mask_csundef and ln_clo_rnf) 
      !                       ! cs masks are read and net evap/precip over closed sea spread out depending on domain_cfg.nc masks.
      !                       ! See ln_mask_csundef and ln_clo_rnf for specific option related to this case
      !
      ln_mask_csundef = .true.   ! (=T) undefined closed seas are masked ; 
      !                          ! (=F) undefined closed seas are kept and no specific treatment is done for these closed seas
      !
      ln_clo_rnf = .true.        ! (=T) river mouth specified in domain_cfg.nc masks (rnf and emp case) are added to the runoff mask.
      !                          !      allow the treatment of closed sea outflow grid-points to be the same as river mouth grid-points
/
!-----------------------------------------------------------------------
&namtsd        !    Temperature & Salinity Data  (init/dmp)             (default: OFF)
!-----------------------------------------------------------------------
   !                       ! =T  read T-S fields for:
   ln_tsd_init = .true.         !  ocean initialisation
   ln_tsd_dmp  = .true.         !  T-S restoring   (see namtra_dmp)
   
   cn_dir      = './'      !  root directory for the T-S data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   sn_tem_ini  = 'woa09_temperature_monthly_1deg_t_an_CMA_drowned_Ex_L75' ,    -12     ,  't_an'   ,    .true.   , .true. , 'yearly'   , 'reshape_WOA09_REG1toCREG025_bilin.nc'  ,   ''    ,    ''
   sn_sal_ini  = 'woa09_salinity_monthly_1deg_s_an_CMA_drowned_Ex_L75'    ,    -12     ,  's_an'   ,    .true.   , .true. , 'yearly'   , 'reshape_WOA09_REG1toCREG025_bilin.nc'  ,   ''    ,    ''
   sn_tem_dmp  = 'woa09_temperature_monthly_1deg_t_an_CMA_drowned_Ex_L75' ,    -12     ,  't_an'   ,    .true.   , .true. , 'yearly'   , 'reshape_WOA09_REG1toCREG025_bilin.nc'  ,   ''    ,    ''
   sn_sal_dmp  = 'woa09_salinity_monthly_1deg_s_an_CMA_drowned_Ex_L75'    ,    -12     ,  's_an'   ,    .true.   , .true. , 'yearly'   , 'reshape_WOA09_REG1toCREG025_bilin.nc'  ,   ''    ,    ''
/
!-----------------------------------------------------------------------
&namwad        !   Wetting and Drying (WaD)                             (default: OFF)
!-----------------------------------------------------------------------
   ln_wd_il    = .false.   !  T/F activation of iterative   limiter
   ln_wd_dl    = .false.   !  T/F activation of directional limiter
   ln_wd_dl_bc = .false.   !  T/F Directional limiteer Baroclinic option
   ln_wd_dl_rmp = .false.  !  T/F Turn on directional limiter ramp
   rn_wdmin0   =  0.30     !  depth at which WaD starts
   rn_wdmin1   =  0.2      !  Minimum wet depth on dried cells
   rn_wdmin2   =  0.0001   !  Tolerance of min wet depth on dried cells
   rn_wdld     =  2.5      !  Land elevation below which WaD is allowed
   nn_wdit     =   20      !  Max iterations for WaD limiter
   rn_wd_sbcdep =  5.0     !  Depth at which to taper sbc fluxes
   rn_wd_sbcfra =  0.999   !  Fraction of SBC fluxes at taper depth (Must be <1)
/
!-----------------------------------------------------------------------
&namcrs        !   coarsened grid (for outputs and/or TOP)              (ln_crs =T)
!-----------------------------------------------------------------------
   nn_factx    = 3         !  Reduction factor of x-direction
   nn_facty    = 3         !  Reduction factor of y-direction
   nn_binref   = 0         !  Bin centering preference: NORTH or EQUAT
      !                    !  0, coarse grid is binned with preferential treatment of the north fold
      !                    !  1, coarse grid is binned with centering at the equator
      !                    !    Symmetry with nn_facty being odd-numbered. Asymmetry with even-numbered nn_facty.
   ln_msh_crs  = .false.   ! =T create a mesh & mask file
   nn_crs_kz   = 0         ! 0, MEAN of volume boxes
      !                    ! 1, MAX of boxes
      !                    ! 2, MIN of boxes
   ln_crs_wn   = .true.    ! wn coarsened (T) or computed using horizontal divergence ( F )
/
!-----------------------------------------------------------------------
&namc1d        !   1D configuration options                             (ln_c1d =T default: PAPA station)
!-----------------------------------------------------------------------
   rn_lat1d    =    50.1   !  Column latitude
   rn_lon1d    =  -144.9   !  Column longitude
/
!-----------------------------------------------------------------------
&namc1d_dyndmp !   U & V newtonian damping                              (ln_c1d =T default: OFF)
!-----------------------------------------------------------------------
   ln_dyndmp   =  .false.  !  add a damping term (T) or not (F)
/
!-----------------------------------------------------------------------
&namc1d_uvd    !   data: U & V currents                                 (ln_c1d =T default: OFF)
!-----------------------------------------------------------------------
   !                       !  =T read U-V fields for:
   ln_uvd_init   = .false.       !  ocean initialisation
   ln_uvd_dyndmp = .false.       !  U-V restoring

   cn_dir      = './'      !  root directory for the U-V data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   sn_ucur     = 'ucurrent'              ,         -1.       ,'u_current',   .false.   , .true. , 'monthly' ,  ''              ,  'Ume'   , ''
   sn_vcur     = 'vcurrent'              ,         -1.       ,'v_current',   .false.   , .true. , 'monthly' ,  ''              ,  'Vme'   , ''
/

!!======================================================================
!!            ***  Surface Boundary Condition namelists  ***          !!
!!                                                                    !!
!!   namsbc          surface boundary condition manager                 (default: NO selection)
!!   namsbc_flx      flux               formulation                     (ln_flx     =T)
!!   namsbc_blk      Bulk formulae formulation                          (ln_blk     =T)
!!   namsbc_cpl      CouPLed            formulation                     ("key_oasis3" )
!!   namsbc_sas      Stand-Alone Surface module                         (SAS_SRC  only)
!!   namsbc_iif      Ice-IF: use observed ice cover                     (nn_ice = 1   )
!!   namtra_qsr      penetrative solar radiation                        (ln_traqsr  =T)
!!   namsbc_ssr      sea surface restoring term (for T and/or S)        (ln_ssr     =T)
!!   namsbc_rnf      river runoffs                                      (ln_rnf     =T)
!!   namsbc_apr      Atmospheric Pressure                               (ln_apr_dyn =T)
!!   namsbc_wave     external fields from wave model                    (ln_wave    =T)
!!   namberg         iceberg floats                                     (ln_icebergs=T)
!!   namsbc_fwb      freshwater-budget adjustment                       (nn_fwb > 0)
!!======================================================================
!
!-----------------------------------------------------------------------
&namsbc        !   Surface Boundary Condition manager                   (default: NO selection)
!-----------------------------------------------------------------------
   nn_fsbc     = 1         !  frequency of SBC module call
      !                    !  (control sea-ice & iceberg model call)
                     ! Type of air-sea fluxes
   ln_usr      = .false.   !  user defined formulation                  (T => check usrdef_sbc)
   ln_flx      = .false.   !  flux formulation                          (T => fill namsbc_flx )
   ln_blk      = .true.    !  Bulk formulation                          (T => fill namsbc_blk )
   ln_abl      = .false.   !  ABL  formulation                          (T => fill namsbc_abl )
      !              ! Type of coupling (Ocean/Ice/Atmosphere) :
   ln_cpl      = .false.   !  atmosphere coupled   formulation          ( requires key_oasis3 )
   ln_mixcpl   = .false.   !  forced-coupled mixed formulation          ( requires key_oasis3 )
   nn_components = 0       !  configuration of the opa-sas OASIS coupling
      !                    !  =0 no opa-sas OASIS coupling: default single executable config.
      !                    !  =1 opa-sas OASIS coupling: multi executable config., OCE component
      !                    !  =2 opa-sas OASIS coupling: multi executable config., SAS component
                     ! Sea-ice :
   nn_ice      = 2         !  =0 no ice boundary condition
      !                    !  =1 use observed ice-cover                 (  => fill namsbc_iif )
      !                    !  =2 or 3 for SI3 and CICE, respectively
   ln_ice_embd = .false.   !  =T embedded sea-ice (pressure + mass and salt exchanges)
      !                    !  =F levitating ice (no pressure, mass and salt exchanges)
                     ! Misc. options of sbc :
   ln_traqsr   = .true.    !  Light penetration in the ocean            (T => fill namtra_qsr)
   ln_dm2dc    = .false.   !  daily mean to diurnal cycle on short wave
   ln_ssr      = .true.    !  Sea Surface Restoring on T and/or S       (T => fill namsbc_ssr)
   nn_fwb      = 0         !  FreshWater Budget: =0 unchecked
      !                    !     =1 global mean of e-p-r set to zero at each time step
      !                    !     =2 annual global mean of e-p-r set to zero
   ln_rnf      = .true.    !  runoffs                                   (T => fill namsbc_rnf)
   ln_apr_dyn  = .false.   !  Patm gradient added in ocean & ice Eqs.   (T => fill namsbc_apr )
   ln_wave     = .false.   !  Activate coupling with wave  (T => fill namsbc_wave)
   nn_lsm      = 0         !  =0 land/sea mask for input fields is not applied (keep empty land/sea mask filename field) ,
                           !  =1:n number of iterations of land/sea mask application for input fields (fill land/sea mask filename field)
/
!-----------------------------------------------------------------------
&namsbc_flx    !   surface boundary condition : flux formulation        (ln_flx =T)
!-----------------------------------------------------------------------
   cn_dir      = './'      !  root directory for the fluxes data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   sn_utau     = 'utau'                  ,        24.        , 'utau'    , .false.     , .false., 'yearly'  , ''               , ''       , ''
   sn_vtau     = 'vtau'                  ,        24.        , 'vtau'    , .false.     , .false., 'yearly'  , ''               , ''       , ''
   sn_qtot     = 'qtot'                  ,        24.        , 'qtot'    , .false.     , .false., 'yearly'  , ''               , ''       , ''
   sn_qsr      = 'qsr'                   ,        24.        , 'qsr'     , .false.     , .false., 'yearly'  , ''               , ''       , ''
   sn_emp      = 'emp'                   ,        24.        , 'emp'     , .false.     , .false., 'yearly'  , ''               , ''       , ''
/
!-----------------------------------------------------------------------
&namsbc_blk    !   namsbc_blk  generic Bulk formula          (ln_blk =T)
!-----------------------------------------------------------------------
   !                    !  bulk algorithm :
   ln_NCAR      = .true.     ! "NCAR"      algorithm   (Large and Yeager 2008)
   ln_COARE_3p0 = .false.    ! "COARE 3.0" algorithm   (Fairall et al. 2003)
   ln_COARE_3p6 = .false.    ! "COARE 3.6" algorithm   (Edson et al. 2013)
   ln_ECMWF     = .false.    ! "ECMWF"     algorithm   (IFS cycle 45r1)
   ln_ANDREAS   = .false.    ! "ANDREAS"   algorithm   (Andreas et al. 2015)
      rn_zqt       =  2.     !  Air temperature & humidity reference height (m)
      rn_zu        = 10.     !  Wind vector reference height (m)
      nn_iter_algo = 5       !  Number of iterations in bulk param. algo ("stable ABL + weak wind" requires more)
      ln_skin_cs   = .false. !  use the cool-skin parameterization  => use at least nn_iter_algo > 10
      ln_skin_wl   = .false. !  use the warm-layer parameterization => use at least nn_iter_algo > 10
   !
   rn_pfac    = 1.          !  multipl. factor for precipitation (total & snow)
   rn_efac    = 1.          !  multipl. factor for evaporation (0. or 1.)
   !
   ln_crt_fbk = .false.     !  Add surface current feedback to the wind stress (Renault et al. 2020, doi: 10.1029/2019MS001715)
         rn_stau_a = -2.9e-3   !     Alpha from eq. 10: Stau = Alpha * Wnd + Beta
         rn_stau_b =  8.0e-3   !     Beta 
   !
   ln_humi_sph = .false. !  humidity "sn_humi" is specific humidity  [kg/kg]
   ln_humi_dpt = .true.  !  humidity "sn_humi" is dew-point temperature [K]
   ln_humi_rlh = .false. !  humidity "sn_humi" is relative humidity     [%]
   ln_tair_pot = .false. !  air temperature read in "sn_tair" is already POTENTIAL TEMPERATURE, NOT ABSOLUTE (ECMWF => ln_tair_pot=.false.)
   !!   
   !! Bulk transfer coefficients over sea-ice: (relevant IF: nn_ice >=1 )
   ln_Cx_ice_cst = .true.     ! use constant ice-air bulk transfer coefficients (value given below)
      rn_Cd_i  = 1.4e-3       ! sea-ice drag coefficient
      rn_Ce_i  = 1.4e-3       !    "    sublimation coefficient
      rn_Ch_i  = 1.4e-3       !    "    sensible heat flux coefficient
   ln_Cx_ice_AN05  = .false.  !  (Andreas et al. 2005)
   ln_Cx_ice_LU12  = .false.  !  (Lupkes et al. 2012)
   ln_Cx_ice_LG15  = .false.  !  (Lupkes & Gryanik 2015)
   !
   cn_dir      = './'      !  root directory for the bulk data location
   !___________!_________________________!___________________!___________!_____________!________!___________!______________________________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ !       weights filename               ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                                      ! pairing  !    filename   !
   sn_wndi     = 'ERA5_u10_drwnd'        ,         1.        , 'u10'     ,   .true.    , .false., 'yearly'  , 'reshape_ERA5_CREG025.L75_bicub_20220623.nc' , 'Uwnd' , ''
   sn_wndj     = 'ERA5_v10_drwnd'        ,         1.        , 'v10'     ,   .true.    , .false., 'yearly'  , 'reshape_ERA5_CREG025.L75_bicub_20220623.nc' , 'Vwnd' , ''
   sn_qsr      = 'ERA5_msdwswrf_drwnd'   ,         1.        , 'msdwswrf',   .true.    , .false., 'yearly'  , 'reshape_ERA5_CREG025.L75_bilin_20220623.nc' , '' , ''
   sn_qlw      = 'ERA5_msdwlwrf_drwnd'   ,         1.        , 'msdwlwrf',   .true.    , .false., 'yearly'  , 'reshape_ERA5_CREG025.L75_bilin_20220623.nc' , '' , ''
   sn_tair     = 'ERA5_t2m_drwnd'        ,         1.        , 't2m'     ,   .true.    , .false., 'yearly'  , 'reshape_ERA5_CREG025.L75_bilin_20220623.nc' , '' , ''
   sn_humi     = 'ERA5_d2m_drwnd'        ,         1.        , 'd2m'     ,   .true.    , .false., 'yearly'  , 'reshape_ERA5_CREG025.L75_bilin_20220623.nc' , '' , ''
   sn_prec     = 'ERA5_mtpr_drwnd'       ,         1.        , 'mtpr'    ,   .true.    , .false., 'yearly'  , 'reshape_ERA5_CREG025.L75_bilin_20220623.nc' , '' , ''
   sn_snow     = 'ERA5_msr_drwnd'        ,         1.        , 'msr'     ,   .true.    , .false., 'yearly'  , 'reshape_ERA5_CREG025.L75_bilin_20220623.nc' , '' , ''
   sn_slp      = 'ERA5_msl_drwnd'        ,         1.        , 'msl'     ,   .true.    , .false., 'yearly'  , 'reshape_ERA5_CREG025.L75_bilin_20220623.nc' , '' , ''
   sn_uoatm    = 'NOT USED'              ,         6.        , 'UOATM'   ,   .false.   , .true. , 'yearly'  , '' , '' , ''
   sn_voatm    = 'NOT USED'              ,         6.        , 'VOATM'   ,   .false.   , .true. , 'yearly'  , '' , '' , ''
   sn_cc       = 'NOT USED'              ,        24.        , 'CC'      ,   .false.   , .true. , 'yearly'  , '' , '' , ''
   sn_hpgi     = 'NOT USED'              ,        24.        , 'uhpg'    ,   .false.   , .false., 'monthly' , '' , '' , ''
   sn_hpgj     = 'NOT USED'              ,        24.        , 'vhpg'    ,   .false.   , .false., 'monthly' , '' , '' , ''
/
!-----------------------------------------------------------------------
&namsbc_abl    !   Atmospheric Boundary Layer formulation           (ln_abl = T)
!-----------------------------------------------------------------------
   cn_dir           = './'      !  root directory for the location of the ABL grid file
   cn_dom           = 'dom_cfg_abl.nc'

   cn_ablrst_in     = "restart_abl"   !  suffix of abl restart name (input)
   cn_ablrst_out    = "restart_abl"   !  suffix of abl restart name (output)
   cn_ablrst_indir  = "."             !  directory to read   input abl restarts
   cn_ablrst_outdir = "."             !  directory to write output abl restarts

   ln_rstart_abl  = .false.
   ln_hpgls_frc   = .false.
   ln_geos_winds  = .false.
   ln_smth_pblh   = .false.
   nn_dyn_restore = 0         ! restoring option for dynamical ABL variables: = 0 no restoring
                              !                                               = 1 equatorial restoring
                              !                                               = 2 global restoring
   rn_ldyn_min   =  4.5       ! dynamics nudging magnitude inside the ABL [hour] (~3 rn_Dt)
   rn_ldyn_max   =  1.5       ! dynamics nudging magnitude above  the ABL [hour] (~1 rn_Dt)
   rn_ltra_min   =  4.5       ! tracers  nudging magnitude inside the ABL [hour] (~3 rn_Dt)
   rn_ltra_max   =  1.5       ! tracers  nudging magnitude above  the ABL [hour] (~1 rn_Dt)
   nn_amxl       =  0         ! mixing length: = 0 Deardorff 80 length-scale
                              !                = 1 length-scale based on the distance to the PBL height
                              !                = 2 Bougeault & Lacarrere 89 length-scale
                              ! CBR00  ! CCH02  ! MesoNH !
   rn_Cm          = 0.0667    ! 0.0667 ! 0.1260 ! 0.1260 !
   rn_Ct          = 0.1667    ! 0.1667 ! 0.1430 ! 0.1430 !
   rn_Ce          = 0.40      ! 0.40   ! 0.34   ! 0.40   !
   rn_Ceps        = 0.700     ! 0.700  ! 0.845  ! 0.850  !
   rn_Ric         = 0.139     ! 0.139  ! 0.143  !   ?    ! Critical Richardson number (to compute PBL height and diffusivities)
   rn_Rod         = 0.15      ! c0 in RMCA17 mixing length formulation (not yet implemented)
/
!-----------------------------------------------------------------------
&namsbc_cpl    !   coupled ocean/atmosphere model                       ("key_oasis3")
!-----------------------------------------------------------------------
   nn_cplmodel       =     1   !  Maximum number of models to/from which NEMO is potentially sending/receiving data
   ln_usecplmask     = .false. !  use a coupling mask file to merge data received from several models
   !                           !   -> file cplmask.nc with the float variable called cplmask (jpi,jpj,nn_cplmodel)
   ln_scale_ice_flux = .false. !  use ice fluxes that are already "ice weighted" ( i.e. multiplied ice concentration)
   nn_cats_cpl       =     5   !  Number of sea ice categories over which coupling is to be carried out (if not 1)
   !_____________!__________________________!____________!_____________!______________________!________!
   !             !        description       !  multiple  !    vector   !       vector         ! vector !
   !             !                          ! categories !  reference  !     orientation      ! grids  !
!***   send    ***
   sn_snd_temp   =   'weighted oce and ice' ,    'no'    ,     ''      ,         ''           ,   ''
   sn_snd_alb    =   'weighted ice'         ,    'no'    ,     ''      ,         ''           ,   ''
   sn_snd_thick  =   'none'                 ,    'no'    ,     ''      ,         ''           ,   ''
   sn_snd_crt    =   'none'                 ,    'no'    , 'spherical' , 'eastward-northward' ,  'T'
   sn_snd_co2    =   'coupled'              ,    'no'    ,     ''      ,         ''           ,   ''
   sn_snd_crtw   =   'none'                 ,    'no'    ,     ''      ,         ''           , 'U,V'
   sn_snd_ifrac  =   'none'                 ,    'no'    ,     ''      ,         ''           ,   ''
   sn_snd_wlev   =   'coupled'              ,    'no'    ,     ''      ,         ''           ,   ''
   sn_snd_cond   =   'weighted ice'         ,    'no'    ,     ''      ,         ''           ,   ''
   sn_snd_thick1 =   'ice and snow'         ,    'no'    ,     ''      ,         ''           ,   ''
   sn_snd_mpnd   =   'weighted ice'         ,    'no'    ,     ''      ,         ''           ,   ''
   sn_snd_sstfrz =   'coupled'              ,    'no'    ,     ''      ,         ''           ,   ''
   sn_snd_ttilyr =   'weighted ice'         ,    'no'    ,     ''      ,         ''           ,   ''
!***  receive  ***
   sn_rcv_w10m   =   'none'                 ,    'no'    ,     ''      ,         ''           ,   ''
   sn_rcv_taumod =   'coupled'              ,    'no'    ,     ''      ,         ''           ,   ''
   sn_rcv_tau    =   'oce only'             ,    'no'    , 'cartesian' , 'eastward-northward' ,  'U,V'
   sn_rcv_dqnsdt =   'coupled'              ,    'no'    ,     ''      ,         ''           ,   ''
   sn_rcv_qsr    =   'oce and ice'          ,    'no'    ,     ''      ,         ''           ,   ''
   sn_rcv_qns    =   'oce and ice'          ,    'no'    ,     ''      ,         ''           ,   ''
   sn_rcv_emp    =   'conservative'         ,    'no'    ,     ''      ,         ''           ,   ''
   sn_rcv_rnf    =   'coupled'              ,    'no'    ,     ''      ,         ''           ,   ''
   sn_rcv_cal    =   'coupled'              ,    'no'    ,     ''      ,         ''           ,   ''
   sn_rcv_co2    =   'coupled'              ,    'no'    ,     ''      ,         ''           ,   ''
   sn_rcv_iceflx =   'none'                 ,    'no'    ,     ''      ,         ''           ,   ''
   sn_rcv_mslp   =   'none'                 ,    'no'    ,     ''      ,         ''           ,   ''
   sn_rcv_ts_ice =   'none'                 ,    'no'    ,     ''      ,         ''           ,   ''
   sn_rcv_isf    =   'none'                 ,    'no'    ,     ''      ,         ''           ,   ''
   sn_rcv_icb    =   'none'                 ,    'no'    ,     ''      ,         ''           ,   ''
   sn_rcv_hsig   =   'none'                 ,    'no'    ,     ''      ,         ''           ,   'T'
   sn_rcv_phioc  =   'none'                 ,    'no'    ,     ''      ,         ''           ,   'T'
   sn_rcv_sdrfx  =   'none'                 ,    'no'    ,     ''      ,         ''           ,   'T'
   sn_rcv_sdrfy  =   'none'                 ,    'no'    ,     ''      ,         ''           ,   'T'
   sn_rcv_wper   =   'none'                 ,    'no'    ,     ''      ,         ''           ,   'T'
   sn_rcv_wnum   =   'none'                 ,    'no'    ,     ''      ,         ''           ,   'T'
   sn_rcv_wstrf  =   'none'                 ,    'no'    ,     ''      ,         ''           ,   'T'
   sn_rcv_wdrag  =   'none'                 ,    'no'    ,     ''      ,         ''           ,   'T'
   sn_rcv_charn  =   'none'                 ,    'no'    ,     ''      ,         ''           ,   'T'
   sn_rcv_taw    =   'none'                 ,    'no'    ,     ''      ,         ''           ,   'U,V'
   sn_rcv_bhd    =   'none'                 ,    'no'    ,     ''      ,         ''           ,   'T'
   sn_rcv_tusd   =   'none'                 ,    'no'    ,     ''      ,         ''           ,   'T'
   sn_rcv_tvsd   =   'none'                 ,    'no'    ,     ''      ,         ''           ,   'T'
/
!-----------------------------------------------------------------------
&namsbc_sas    !   Stand-Alone Surface module: ocean data               (SAS_SRC  only)
!-----------------------------------------------------------------------
   l_sasread   = .false.     !  =T Read in file ;  =F set all to 0. (see sbcssm)
      ln_3d_uve   = .false.   !  specify whether we are supplying a 3D u,v and e3 field
      ln_read_frq = .false.   !  specify whether we must read frq or not

   cn_dir      = './'      !  root directory for the ocean data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   sn_usp      = 'sas_grid_U'            ,       120.        , 'uos'     ,   .true.    , .true. , 'yearly'  ,    ''            ,    ''    ,    ''
   sn_vsp      = 'sas_grid_V'            ,       120.        , 'vos'     ,   .true.    , .true. , 'yearly'  ,    ''            ,    ''    ,    ''
   sn_tem      = 'sas_grid_T'            ,       120.        , 'sosstsst',   .true.    , .true. , 'yearly'  ,    ''            ,    ''    ,    ''
   sn_sal      = 'sas_grid_T'            ,       120.        , 'sosaline',   .true.    , .true. , 'yearly'  ,    ''            ,    ''    ,    ''
   sn_ssh      = 'sas_grid_T'            ,       120.        , 'sossheig',   .true.    , .true. , 'yearly'  ,    ''            ,    ''    ,    ''
   sn_e3t      = 'sas_grid_T'            ,       120.        , 'e3t_m'   ,   .true.    , .true. , 'yearly'  ,    ''            ,    ''    ,    ''
   sn_frq      = 'sas_grid_T'            ,       120.        , 'frq_m'   ,   .true.    , .true. , 'yearly'  ,    ''            ,    ''    ,    ''
   !!
   !! Following only needed with STATION_ASF compiled with "sea-ice" support: "key_si3" (ice fraction, ice surface temperature and sea-ice albedo:
   sn_ifr  = 'NOT USED'                  , 1.         , 'siconc'  ,   .true.    , .false. , 'yearly'  ,    ''            ,    ''    ,    ''
   sn_tic  = 'NOT USED'                  , 1.         , 'istl1'   ,   .true.    , .false. , 'yearly'  ,    ''            ,    ''    ,    ''
   sn_ial  = 'NOT USED'                  , 1.         , 'fal'     ,   .true.    , .false. , 'yearly'  ,    ''            ,    ''    ,    ''
/
!-----------------------------------------------------------------------
&namsbc_iif    !   Ice-IF : use observed ice cover                      (nn_ice = 1)
!-----------------------------------------------------------------------
   cn_dir      = './'      !  root directory for the ice cover data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   sn_ice      ='ice_cover_clim.nc'      ,        -12.       ,'ice_cover',   .true.    , .true.  , 'yearly'  ,   ''            ,   ''     ,   ''
/
!-----------------------------------------------------------------------
&namtra_qsr    !   penetrative solar radiation                          (ln_traqsr =T)
!-----------------------------------------------------------------------
   !                       !  type of penetration                        (default: NO selection)
   ln_qsr_rgb  = .false.      !  RGB light penetration (Red-Green-Blue)
   ln_qsr_2bd  = .true.       !  2BD light penetration (two bands)
   ln_qsr_bio  = .false.      !  bio-model light penetration
   !                       !  RGB & 2BD choices:
   rn_abs      =   0.58       !  RGB & 2BD: fraction absorbed in the very near surface
   rn_si0      =   0.35       !  RGB & 2BD: shortess depth of extinction
   nn_chldta   =      0       !  RGB : Chl data (=1) or cst value (=0)
   rn_si1      =   23.0       !  2BD : longest depth of extinction

   cn_dir      = './'      !  root directory for the chlorophyl data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   sn_chl      ='chlaseawifs_c1m-99-05_smooth_CREG_R025_vh20161117',        -12         , 'CHLA'    ,   .true.     , .true. , 'yearly'  , ''       , ''       , ''
/
!-----------------------------------------------------------------------
&namsbc_ssr    !   surface boundary condition : sea surface restoring   (ln_ssr =T)
!-----------------------------------------------------------------------
   nn_sstr     =     0     !  add a retroaction term to the surface heat flux (=1) or not (=0)
      rn_dqdt     = -40.      !  magnitude of the retroaction on temperature   [W/m2/K]
   nn_sssr     =     2     !  add a damping term to the surface freshwater flux (=2)
      !                    !  or to SSS only (=1) or no damping term (=0)
      rn_deds     =  -166.67  !  magnitude of the damping on salinity   [mm/day]
      ln_sssr_bnd =  .true.   !  flag to bound erp term (associated with nn_sssr=2)
      rn_sssr_bnd =   4.e0    !  ABS(Max/Min) value of the damping erp term [mm/day]
      nn_sssr_ice =   0       ! control of sea surface restoring under sea-ice
                              ! 0 = no restoration under ice : * (1-icefrac)
                              ! 1 = restoration everywhere 
                              ! >1 = enhanced restoration under ice : 1+(nn_icedmp-1)*icefrac

   cn_dir      = './'      !  root directory for the SST/SSS data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   sn_sst      = 'woa09_sst01-12_monthly_1deg_t_an_CMA_drowned_Ex_L75'  ,        -12   ,  't_an'    ,    .true.    , .true. , 'yearly'   , 'SST_reshape_WOA09_REG1toCREG025_bilin.nc'       , ''       , ''
   sn_sss      = 'woa09_sss01-12_monthly_1deg_s_an_CMA_drowned_Ex_L75'  ,        -12   ,  's_an'    ,    .true.    , .true. , 'yearly'   , 'SSS_reshape_WOA09_REG1toCREG025_bilin.nc'       , ''       , ''
   sn_coast    = 'dist_coast_CREG025_ct20190401'                        ,         0    , 'Tcoast'   ,    .false.   , .true. , 'yearly'   ,  ''      , '', ''
   ln_sssr_flt = .true.    ! use filtering of SSS model for sss restoring
   nn_shap_iter   =  100   ! number of iteration of the shapiro filter
   ln_sssr_msk = .true.    ! use a mask near the coast
   rn_dist    =  150.      ! distance to the coast
   ln_sssr_ice = .false.   ! Apply SSS restoring under sea-ice
/
!-----------------------------------------------------------------------
&namsbc_rnf    !   runoffs                                              (ln_rnf =T)
!-----------------------------------------------------------------------
   ln_rnf_mouth = .true.   !  specific treatment at rivers mouths
      rn_hrnf     =  50.e0     !  depth over which enhanced vertical mixing is used    (ln_rnf_mouth=T)
      rn_avt_rnf  =   1.e-3    !  value of the additional vertical mixing coef. [m2/s] (ln_rnf_mouth=T)
   rn_rfact     =   1.e0    !  multiplicative factor for runoff
   ln_rnf_depth = .false.   !  read in depth information for runoff
   ln_rnf_tem   = .false.   !  read in temperature information for runoff
   ln_rnf_sal   = .false.   !  read in salinity information for runoff
   ln_rnf_icb   = .false.   !  read iceberg flux
   ln_rnf_depth_ini = .false.  ! compute depth at initialisation from runoff file
      rn_rnf_max  = 5.735e-4   !  max value of the runoff climatologie over global domain ( ln_rnf_depth_ini = .true )
      rn_dep_max  = 150.       !  depth over which runoffs is spread ( ln_rnf_depth_ini = .true )
      nn_rnf_depth_file = 0    !  create (=1) a runoff depth file or not (=0)

   cn_dir       = './'      !  root directory for the runoff data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   sn_rnf      = 'CREG025_runoff_monthly_combined_Dai_Trenberth_Bamber'     ,        -1         , 'runoff',     .true.     , .false. , 'yearly'  , ''       , ''       , ''
   sn_cnf      = 'CREG025_runoff_monthly_combined_Dai_Trenberth_Bamber'     ,         0         , 'socoefr' ,   .false.    , .false. , 'yearly'  , ''       , ''       , ''
   sn_s_rnf    = 'runoffs'                                                  ,        24         , 'rosaline',   .true.    , .true. , 'yearly'  , ''               , ''       , ''
   sn_t_rnf    = 'runoffs'                                                  ,        24         , 'rotemper',   .true.    , .true. , 'yearly'  , ''               , ''       , ''
   sn_i_rnf    = 'NOT USED'                                                 ,        24         , 'xxxxxxxx',   .true.    , .true. , 'yearly'  , ''               , ''       , ''
   sn_dep_rnf  = 'runoffs'                                                  ,       -12.        , 'rodepth' ,   .false.   , .true. , 'yearly'  , ''               , ''       , ''
/
!-----------------------------------------------------------------------
&namsbc_wave   ! External fields from wave model                        (ln_wave=T)
!-----------------------------------------------------------------------
   ln_sdw      = .false.       !  get the 2D Surf Stokes Drift & Compute the 3D stokes drift
   ln_stcor    = .false.       !  add Stokes Coriolis and tracer advection terms
   ln_cdgw     = .false.       !  Neutral drag coefficient read from wave model
   ln_tauoc    = .false.       !  ocean stress is modified by wave induced stress
   ln_wave_test= .false.       !  Test case with constant wave fields
!
   ln_charn    = .false.       !  Charnock coefficient read from wave model (IFS only)
   ln_taw      = .false.       !  ocean stress is modified by wave induced stress (coupled mode)
   ln_phioc    = .false.       !  TKE flux from wave model
   ln_bern_srfc= .false.       !  wave induced pressure. Bernoulli head J term
   ln_breivikFV_2016 = .false. !  breivik 2016 vertical stokes profile
   ln_vortex_force = .false.   !  Vortex Force term 
   ln_stshear  = .false.       !  include stokes shear in EKE computation
!
   cn_dir      = './'      !  root directory for the waves data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   sn_cdg      =  'sdw_ecwaves_orca2'    ,        6.         , 'drag_coeff' ,  .true.  , .true. , 'yearly'  ,  ''              , ''       , ''
   sn_usd      =  'sdw_ecwaves_orca2'    ,        6.         , 'u_sd2d'     ,  .true.  , .true. , 'yearly'  ,  ''              , ''       , ''
   sn_vsd      =  'sdw_ecwaves_orca2'    ,        6.         , 'v_sd2d'     ,  .true.  , .true. , 'yearly'  ,  ''              , ''       , ''
   sn_hsw      =  'sdw_ecwaves_orca2'    ,        6.         , 'hs'         ,  .true.  , .true. , 'yearly'  ,  ''              , ''       , ''
   sn_wmp      =  'sdw_ecwaves_orca2'    ,        6.         , 'wmp'        ,  .true.  , .true. , 'yearly'  ,  ''              , ''       , ''
   sn_wnum     =  'sdw_ecwaves_orca2'    ,        6.         , 'wave_num'   ,  .true.  , .true. , 'yearly'  ,  ''              , ''       , ''
   sn_tauoc    =  'sdw_ecwaves_orca2'    ,        6.         , 'wave_stress',  .true.  , .true. , 'yearly'  ,  ''              , ''       , ''
/
!-----------------------------------------------------------------------
&namsbc_fwb    !   freshwater-budget adjustment                         (nn_fwb > 0)
!-----------------------------------------------------------------------
   rn_fwb0     = 0.0          ! Initial freshwater adjustment flux [kg/m2/s] (nn_fwb = 2)
/

!!======================================================================
!!               ***  Lateral boundary condition  ***                 !!
!!                                                                    !!
!!   namlbc        lateral momentum boundary condition                  (default: NO selection)
!!   namagrif      agrif nested grid   (read by child model only)       ("key_agrif")
!!   nam_tide      Tidal forcing                                        (default: OFF)
!!   nambdy        Unstructured open boundaries                         (default: OFF)
!!   nambdy_dta    Unstructured open boundaries - external data         (see  nambdy)
!!   nambdy_tide   tidal forcing at open boundaries                     (default: OFF)
!!======================================================================
!
!-----------------------------------------------------------------------
&namlbc        !   lateral momentum boundary condition                  (default: NO selection)
!-----------------------------------------------------------------------
   !                       !  free slip  !   partial slip  !   no slip   ! strong slip
   rn_shlat    =    2.     !  shlat = 0  !  0 < shlat < 2  !  shlat = 2  !  2 < shlat
   ln_vorlat   = .false.   !  consistency of vorticity boundary condition with analytical Eqs.
/
!-----------------------------------------------------------------------
&nambdy        !  unstructured open boundaries                          (default: OFF)
!-----------------------------------------------------------------------
   ln_bdy         = .true.    !  Use unstructured open boundaries
   nb_bdy         = 2         !  number of open boundary sets
   ln_coords_file = .false.,.false.   !  =T : read bdy coordinates from file
      cn_coords_file = '',''          !  bdy coordinates files
   ln_mask_file   = .false.   !  =T : read mask from file
      cn_mask_file = ''        !  name of mask file (if ln_mask_file=.TRUE.)
   cn_dyn2d    = 'flather','frs' 
   nn_dyn2d_dta   = 1,1       !  = 0, bdy data are equal to the initial state
      !                       !  = 1, bdy data are read in 'bdydata   .nc' files
      !                       !  = 2, use tidal harmonic forcing data from files
      !                       !  = 3, use external data AND tidal harmonic forcing
   cn_dyn3d      =  'frs','frs' !
   nn_dyn3d_dta  =  1,1       !  = 0, bdy data are equal to the initial state
   !                          !  = 1, bdy data are read in 'bdydata   .nc' files
   cn_tra        =  'frs','frs' !
   nn_tra_dta    =  1,1       !  = 0, bdy data are equal to the initial state
   !                          !  = 1, bdy data are read in 'bdydata   .nc' files
   cn_ice        =  'none','frs' !
   nn_ice_dta    =  0,1       !  = 0, bdy data are equal to the initial state
   !                          !  = 1, bdy data are read in 'bdydata   .nc' files
   !
   ln_tra_dmp    =.false.,.false.     !  open boudaries conditions for tracers
   ln_dyn3d_dmp  =.false.,.false.     !  open boundary condition for baroclinic velocities
   rn_time_dmp   =  1.,1.     !  Damping time scale in days
   rn_time_dmp_out = 10.,10.  !  Outflow damping time scale
   nn_rimwidth   = 10,1       !  width of the relaxation zone
   ln_vol        = .false.     !  total volume correction (see nn_volctl parameter)
   nn_volctl     =  0         !  = 0, the total water flux across open boundaries is zero
/
!-----------------------------------------------------------------------
&nambdy_index  !  clem creg025: tructured open boundaries definition
!-----------------------------------------------------------------------
    ctypebdy ='S'                   ! Open boundary type (W,E,S or N)
    nbdyind  = 2                    ! indice of velocity row or column
                                    ! if ==-1, set obc at the domain boundary
                                    !        , discard start and end indices
    nbdybeg  = 54                   ! indice of segment start
    nbdyend  = 324                  ! indice of segment end
/
!-----------------------------------------------------------------------
&nambdy_index  !  structured open boundaries definition
!-----------------------------------------------------------------------
    ctypebdy ='N'                   ! Open boundary type (W,E,S or N)
    nbdyind  = 601                  ! indice of velocity row or column
                                    ! if ==-1, set obc at the domain boundary
                                    !        , discard start and end indices
    nbdybeg  = 202                  ! indice of segment start
    nbdyend  = 223                  ! indice of segment end
/
!-----------------------------------------------------------------------
&nambdy_dta    !  open boundaries - external data                       (see nam_bdy)
!-----------------------------------------------------------------------
   ln_zinterp  = .false.      !  T if a vertical interpolation is required. Variables gdep[tuv] and e3[tuv] must exist in the file
   !                          !  automatically defined to T if the number of vertical levels in bdy dta /= jpk
   ln_full_vel = .true.       !  T if [uv]3d are "full" velocities and not only its baroclinic components
   !                          !  in this case, baroclinic and barotropic velocities will be recomputed -> [uv]2d not needed
   !
   cn_dir      = './'         !  root directory for the BDY data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   bn_ssh =    'ORCA025.L75-GJM189-CREG025.L75-BDY_south_SSH' ,  -1   , 'sossheig' ,     .true.     , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
   bn_u3d  =   'ORCA025.L75-GJM189-CREG025.L75-BDY_south_U'   ,  -1   , 'vozocrtx' ,     .true.     , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
   bn_v3d  =   'ORCA025.L75-GJM189-CREG025.L75-BDY_south_V'   ,  -1   , 'vomecrty' ,     .true.     , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
   bn_tem  =   'ORCA025.L75-GJM189-CREG025.L75-BDY_south_T'   ,  -1   , 'votemper' ,     .true.     , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
   bn_sal  =   'ORCA025.L75-GJM189-CREG025.L75-BDY_south_S'   ,  -1   , 'vosaline' ,     .true.     , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
/
!-----------------------------------------------------------------------
&nambdy_dta    !  open boundaries - external data                       (see nam_bdy)
!-----------------------------------------------------------------------
   ln_zinterp  = .false.      !  T if a vertical interpolation is required. Variables gdep[tuv] and e3[tuv] must exist in the file
   !                          !  automatically defined to T if the number of vertical levels in bdy dta /= jpk
   ln_full_vel = .true.       !  T if [uv]3d are "full" velocities and not only its baroclinic components
   !                          !  in this case, baroclinic and barotropic velocities will be recomputed -> [uv]2d not needed
   !
   cn_dir      = './'         !  root directory for the BDY data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   bn_ssh  =   'ORCA025.L75-GJM189-CREG025.L75-BDY_north_SSH'    ,  -1   , 'sossheig' ,     .true.     , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
   bn_u3d  =   'ORCA025.L75-GJM189-CREG025.L75-BDY_north_U'      ,  -1   , 'vozocrtx' ,     .true.     , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
   bn_v3d  =   'ORCA025.L75-GJM189-CREG025.L75-BDY_north_V'      ,  -1   , 'vomecrty' ,     .true.     , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
   bn_tem  =   'ORCA025.L75-GJM189-CREG025.L75-BDY_north_T'      ,  -1   , 'votemper' ,     .true.     , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
   bn_sal  =   'ORCA025.L75-GJM189-CREG025.L75-BDY_north_S'      ,  -1   , 'vosaline' ,     .true.     , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
!* for si3
   bn_a_i  =   'ORCA025.L75-GJM189-CREG025.L75-BDY_north_ice'    ,  -1   , 'ileadfra' ,     .true.     , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
   bn_h_i  =   'ORCA025.L75-GJM189-CREG025.L75-BDY_north_ice'    ,  -1   , 'iicethic' ,     .true.     , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
   bn_h_s  =   'ORCA025.L75-GJM189-CREG025.L75-BDY_north_ice'    ,  -1   , 'isnowthi' ,     .true.     , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
   bn_t_i      = 'NOT USED'              ,         24.       , 'sitemp'  ,    .true.   , .false.,  'daily'  ,    ''            ,   ''     ,     ''
   bn_t_s      = 'NOT USED'              ,         24.       , 'sntemp'  ,    .true.   , .false.,  'daily'  ,    ''            ,   ''     ,     ''
   bn_tsu      = 'NOT USED'              ,         24.       , 'sittop'  ,    .true.   , .false.,  'daily'  ,    ''            ,   ''     ,     ''
   bn_s_i      = 'NOT USED'              ,         24.       , 'sisalt'  ,    .true.   , .false.,  'daily'  ,    ''            ,   ''     ,     ''
   ! melt ponds (be careful, bn_aip is the pond concentration (not fraction), so it differs from rn_iceapnd)
   bn_aip      = 'NOT USED'              ,         24.       , 'siapnd'  ,    .true.   , .false.,  'daily'  ,    ''            ,   ''     ,     ''
   bn_hip      = 'NOT USED'              ,         24.       , 'sihpnd'  ,    .true.   , .false.,  'daily'  ,    ''            ,   ''     ,     ''
   bn_hil      = 'NOT USED'              ,         24.       , 'sihlid'  ,    .true.   , .false.,  'daily'  ,    ''            ,   ''     ,     ''
   ! if bn_t_i etc are "not used", then define arbitrary temperatures and salinity and ponds
   rn_ice_tem  = 270.         !  arbitrary temperature               of incoming sea ice
   rn_ice_sal  = 10.          !       --   salinity                            --
   rn_ice_age  = 30.          !       --   age                                 --
   rn_ice_apnd = 0.2          !       --   pond fraction = a_ip/a_i            --
   rn_ice_hpnd = 0.05         !       --   pond depth                          --
   rn_ice_hlid = 0.0          !       --   pond lid depth                      --
/
!!======================================================================
!!                ***  Top/Bottom boundary condition  ***             !!
!!                                                                    !!
!!   namdrg        top/bottom drag coefficient                          (default: NO selection)
!!   namdrg_top    top    friction                                      (ln_drg_OFF=F & ln_isfcav=T)
!!   namdrg_bot    bottom friction                                      (ln_drg_OFF=F)
!!   nambbc        bottom temperature boundary condition                (default: OFF)
!!   nambbl        bottom boundary layer scheme                         (default: OFF)
!!======================================================================
!
!-----------------------------------------------------------------------
&namdrg        !   top/bottom drag coefficient                          (default: NO selection)
!-----------------------------------------------------------------------
   ln_drg_OFF  = .false.   !  free-slip       : Cd = 0                  (F => fill namdrg_bot
   ln_lin      = .false.   !      linear  drag: Cd = Cd0 Uc0                   &   namdrg_top)
   ln_non_lin  = .false.   !  non-linear  drag: Cd = Cd0 |U|
   ln_loglayer = .true.    !  logarithmic drag: Cd = vkarmn/log(z/z0) |U|
   !
   ln_drgimp   = .true.    !  implicit top/bottom friction flag
      ln_drgice_imp = .true. ! implicit ice-ocean drag
/
!-----------------------------------------------------------------------
&namdrg_top    !   TOP friction                                         (ln_drg_OFF =F & ln_isfcav=T)
!-----------------------------------------------------------------------
   rn_Cd0      =  1.e-3    !  drag coefficient [-]
   rn_Uc0      =  0.4      !  ref. velocity [m/s] (linear drag=Cd0*Uc0)
   rn_Cdmax    =  0.1      !  drag value maximum [-] (logarithmic drag)
   rn_ke0      =  2.5e-3   !  background kinetic energy  [m2/s2] (non-linear cases)
   rn_z0       =  3.0e-3   !  roughness [m] (ln_loglayer=T)
   ln_boost    = .false.   !  =T regional boost of Cd0 ; =F constant
      rn_boost =  50.         !  local boost factor  [-]
/
!-----------------------------------------------------------------------
&namdrg_bot    !   BOTTOM friction                                      (ln_drg_OFF =F)
!-----------------------------------------------------------------------
   rn_Cd0      =  1.e-3    !  drag coefficient [-]
   rn_Uc0      =  0.4      !  ref. velocity [m/s] (linear drag=Cd0*Uc0)
   rn_Cdmax    =  0.1      !  drag value maximum [-] (logarithmic drag)
   rn_ke0      =  2.5e-3   !  background kinetic energy  [m2/s2] (non-linear cases)
   rn_z0       =  3.e-3    !  roughness [m] (ln_loglayer=T)
   ln_boost    = .false.   !  =T regional boost of Cd0 ; =F constant
      rn_boost =  50.         !  local boost factor  [-]
/
!-----------------------------------------------------------------------
&nambbl        !   bottom boundary layer scheme                         (default: OFF)
!-----------------------------------------------------------------------
   ln_trabbl   = .true.   !  Bottom Boundary Layer parameterisation flag
      nn_bbl_ldf  =  1        !  diffusive bbl (=1)   or not (=0)
      nn_bbl_adv  =  0        !  advective bbl (=1/2) or not (=0)
      rn_ahtbbl   =  1000.    !  lateral mixing coefficient in the bbl  [m2/s]
      rn_gambbl   =  10.      !  advective bbl coefficient                 [s]
/

!!======================================================================
!!                        Tracer (T-S) namelists                      !!
!!                                                                    !!
!!   nameos        equation of state                                    (default: NO selection)
!!   namtra_adv    advection scheme                                     (default: NO selection)
!!   namtra_ldf    lateral diffusion scheme                             (default: NO selection)
!!   namtra_mle    mixed layer eddy param. (Fox-Kemper param.)          (default: OFF)
!!   namtra_eiv    eddy induced velocity param.                         (default: OFF)
!!   namtra_dmp    T & S newtonian damping                              (default: OFF)
!!======================================================================
!
!-----------------------------------------------------------------------
&nameos        !   ocean Equation Of Seawater                           (default: NO selection)
!-----------------------------------------------------------------------
   ln_teos10   = .false.         !  = Use TEOS-10
   ln_eos80    = .true.          !  = Use EOS80
   ln_seos     = .false.         !  = Use S-EOS (simplified Eq.)
                                 !
   !                     ! S-EOS coefficients (ln_seos=T):
   !                             !  rd(T,S,Z)*rho0 = -a0*(1+.5*lambda*dT+mu*Z+nu*dS)*dT+b0*dS
   rn_a0       =  1.6550e-1      !  thermal expension coefficient
   rn_b0       =  7.6554e-1      !  saline  expension coefficient
   rn_lambda1  =  5.9520e-2      !  cabbeling coeff in T^2  (=0 for linear eos)
   rn_lambda2  =  7.4914e-4      !  cabbeling coeff in S^2  (=0 for linear eos)
   rn_mu1      =  1.4970e-4      !  thermobaric coeff. in T (=0 for linear eos)
   rn_mu2      =  1.1090e-5      !  thermobaric coeff. in S (=0 for linear eos)
   rn_nu       =  2.4341e-3      !  cabbeling coeff in T*S  (=0 for linear eos)
/
!-----------------------------------------------------------------------
&namtra_adv    !   advection scheme for tracer                          (default: NO selection)
!-----------------------------------------------------------------------
   ln_traadv_OFF = .false. !  No tracer advection
   ln_traadv_cen = .false. !  2nd order centered scheme
      nn_cen_h   =  4            !  =2/4, horizontal 2nd order CEN / 4th order CEN
      nn_cen_v   =  4            !  =2/4, vertical   2nd order CEN / 4th order COMPACT
   ln_traadv_fct = .true.  !  FCT scheme
      nn_fct_h   =  2            !  =2/4, horizontal 2nd / 4th order
      nn_fct_v   =  2            !  =2/4, vertical   2nd / COMPACT 4th order
   ln_traadv_mus = .false. !  MUSCL scheme
      ln_mus_ups = .false.       !  use upstream scheme near river mouths
   ln_traadv_ubs = .false. !  UBS scheme
      nn_ubs_v   =  2            !  =2  , vertical 2nd order FCT / COMPACT 4th order
   ln_traadv_qck = .false. !  QUICKEST scheme
/
!-----------------------------------------------------------------------
&namtra_ldf    !   lateral diffusion scheme for tracers                 (default: NO selection)
!-----------------------------------------------------------------------
   !                       !  Operator type:
   ln_traldf_OFF   = .false.   !  No explicit diffusion
   ln_traldf_lap   = .true.    !    laplacian operator
   ln_traldf_blp   = .false.   !  bilaplacian operator
   !
   !                       !  Direction of action:
   ln_traldf_lev   = .false.   !  iso-level
   ln_traldf_hor   = .false.   !  horizontal  (geopotential)
   ln_traldf_iso   = .true.    !  iso-neutral (standard operator)
   ln_traldf_triad = .false.   !  iso-neutral (triad    operator)
   !
   !		       	         !  iso-neutral options:
   ln_traldf_msc   = .true.    !  Method of Stabilizing Correction      (both operators)
   rn_slpmax       =  0.01     !  slope limit                           (both operators)
   ln_triad_iso    = .false.   !  pure horizontal mixing in ML              (triad only)
   rn_sw_triad     = 1         !  =1 switching triad ; =0 all 4 triads used (triad only)
   ln_botmix_triad = .false.   !  lateral mixing on bottom                  (triad only)
   !
   !                       !  Coefficients:
   nn_aht_ijk_t    = 20        !  space/time variation of eddy coefficient:
      !                             !   =-20 (=-30)    read in eddy_diffusivity_2D.nc (..._3D.nc) file
      !                             !   =  0           constant
      !                             !   = 10 F(k)      =ldf_c1d
      !                             !   = 20 F(i,j)    =ldf_c2d
      !                             !   = 21 F(i,j,t)  =Treguier et al. JPO 1997 formulation
      !                             !   = 30 F(i,j,k)  =ldf_c2d * ldf_c1d
      !                             !   = 31 F(i,j,k,t)=F(local velocity and grid-spacing)
      !                        !  time invariant coefficients:  aht0 = 1/2  Ud*Ld   (lap case)
      !                             !                           or   = 1/12 Ud*Ld^3 (blp case)
      rn_Ud        = 0.02158        !  lateral diffusive velocity [m/s] (nn_aht_ijk_t= 0, 10, 20, 30)
      rn_Ld        = 200.e+2        !  lateral diffusive length   [m]   (nn_aht_ijk_t= 0, 10)
!----------------------------------------------------------------------------
!  drakkar comment : for the case  nn_aht_ijk_t = 20 ( only rn_Ud is used )
!                                                              LAP             BILAP
!           aht[uv](:,:) = fac*Ud * max(e1,e2)(:,:) ^ n    [ fac=1/2, n=1 ; fac=1/12, n=3)
!  In 3.6   aht[uv](:,:) = rn_aht_0 * [ max(e1,e2)(:,:)/ max(e1,e2) ] ^ n
!     ===>  rn_Ud = rn_aht_0/fac/MAX(e1,e2)^n
!3.6 :  rn_aht_0         =  67.52   !  horizontal eddy diffusivity for tracers [m2/s] BSAS12 (ref 47.5 N)
!        rn_Ud = 67.52 * 2 / (7012)^1 = 0.0193  !! ( lap)
!   for a bilap this will give a max bilap of
!   aht_max = 1/12 * 0.0193 * ( 7012)^3 = 3.319 10^9 m4/s )
! comment ORCA05 : lap iso 600 m2/s : rn_Ud= 600*2/55600 = 0.02158
! comment ORCA025 : lap iso 300 m2/s : rn_Ud= 300*2/27800 = 0.02158
!----------------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namtra_mle    !   mixed layer eddy parametrisation (Fox-Kemper)       (default: OFF)
!-----------------------------------------------------------------------
   ln_mle      = .false.   ! (T) use the Mixed Layer Eddy (MLE) parameterisation
   rn_ce       = 0.06      ! magnitude of the MLE (typical value: 0.06 to 0.08)
   nn_mle      = 1         ! MLE type: =0 standard Fox-Kemper ; =1 new formulation
   rn_lf       = 5.e+3     ! typical scale of mixed layer front (meters)                      (case rn_mle=0)
   rn_time     = 172800.   ! time scale for mixing momentum across the mixed layer (seconds)  (case rn_mle=0)
   rn_lat      = 20.       ! reference latitude (degrees) of MLE coef.                        (case rn_mle=1)
   nn_mld_uv   = 0         ! space interpolation of MLD at u- & v-pts (0=min,1=averaged,2=max)
   nn_conv     = 0         ! =1 no MLE in case of convection ; =0 always MLE
   rn_rho_c_mle = 0.01      ! delta rho criterion used to calculate MLD for FK
/
!-----------------------------------------------------------------------
&namtra_eiv    !   eddy induced velocity param.                         (default: OFF)
!-----------------------------------------------------------------------
   ln_ldfeiv   = .false.   ! use eddy induced velocity parameterization
      !
      !                        !  Coefficients:
      nn_aei_ijk_t    = 0           !  space/time variation of eddy coefficient:
      !                             !   =-20 (=-30)    read in eddy_induced_velocity_2D.nc (..._3D.nc) file
      !                             !   =  0           constant
      !                             !   = 10 F(k)      =ldf_c1d
      !                             !   = 20 F(i,j)    =ldf_c2d
      !                             !   = 21 F(i,j,t)  =Treguier et al. JPO 1997 formulation
      !                             !   = 30 F(i,j,k)  =ldf_c2d * ldf_c1d
      !                        !  time invariant coefficients:  aei0 = 1/2  Ue*Le
      rn_Ue        = 0.02           !  lateral diffusive velocity [m/s] (nn_aht_ijk_t= 0, 10, 20, 30)
      rn_Le        = 200.e+3        !  lateral diffusive length   [m]   (nn_aht_ijk_t= 0, 10)
      !
      ln_ldfeiv_dia =.false.   ! diagnose eiv stream function and velocities
/
!-----------------------------------------------------------------------
&namtra_dmp    !   tracer: T & S newtonian damping                      (default: OFF)
!-----------------------------------------------------------------------
   ln_tradmp   =  .true.   !  add a damping termn (T) or not (F)
      nn_zdmp     =    0       !  vertical   shape =0    damping throughout the water column
      !                        !                   =1 no damping in the mixing layer (kz  criteria)
      !                        !                   =2 no damping in the mixed  layer (rho crieria)
      cn_resto    = 'resto.nc' ! Name of file containing restoration coefficient field (use dmp_tools to create this)
   !
   nn_hdmp     =   -2      !  horizontal shape =-1, damping in Med and Red Seas only
                           !                   =XX, damping poleward of XX degrees (XX>0)
                           !                      + F(distance-to-coast) + Red and Med Seas
                           !                   =-2, DRAKKAR customization
   nn_file     =    0      !  create a damping.coeff NetCDF file (=1) or not (=0)
   ln_dmpmask  = .false.   !  Read dmp_mask.nc file  when T (between 0 and 1 )
   rn_timsk    =  730.     !  Time scale used for dmp_mask
/

!!======================================================================
!!                      ***  Dynamics namelists  ***                  !!
!!                                                                    !!
!!   nam_vvl       vertical coordinate options                          (default: z-star)
!!   namdyn_adv    formulation of the momentum advection                (default: NO selection)
!!   namdyn_vor    advection scheme                                     (default: NO selection)
!!   namdyn_hpg    hydrostatic pressure gradient                        (default: NO selection)
!!   namdyn_spg    surface pressure gradient                            (default: NO selection)
!!   namdyn_ldf    lateral diffusion scheme                             (default: NO selection)
!!   namdta_dyn    offline TOP: dynamics read in files                  (OFF_SRC only)
!!======================================================================
!
!-----------------------------------------------------------------------
&nam_vvl       !   vertical coordinate options                          (default: z-star)
!-----------------------------------------------------------------------
   ln_vvl_zstar  = .false.          !  z-star vertical coordinate
   ln_vvl_ztilde = .false.          !  z-tilde vertical coordinate: only high frequency variations
   ln_vvl_layer  = .false.          !  full layer vertical coordinate
   ln_vvl_ztilde_as_zstar = .false. !  ztilde vertical coordinate emulating zstar
   ln_vvl_zstar_at_eqtor  = .false. !  ztilde near the equator
   rn_ahe3       =  0.0             !  thickness diffusion coefficient
   rn_rst_e3t    = 30.0             !  ztilde to zstar restoration timescale [days]
   rn_lf_cutoff  =  5.0             !  cutoff frequency for low-pass filter  [days]
   rn_zdef_max   =  0.9             !  maximum fractional e3t deformation
   ln_vvl_dbg    = .false.          !  debug prints    (T/F)
   nn_vvl_interp =  2               !  interpolation method of scale factor anomalies at U/V/F points
                                    !  =0 linear even at the bottom (old)
                                    !  =1 linear with bottom correction
                                    !  =2 proportionnal to scale factors at rest ("qco" like)
/
!-----------------------------------------------------------------------
&namdyn_adv    !   formulation of the momentum advection                (default: NO selection)
!-----------------------------------------------------------------------
   ln_dynadv_OFF = .false. !  linear dynamics (no momentum advection)
   ln_dynadv_vec = .true.  !  vector form - 2nd centered scheme
     nn_dynkeg     = 1        ! grad(KE) scheme: =0   C2  ;  =1   Hollingsworth correction
   ln_dynadv_cen2 = .false. !  flux form - 2nd order centered scheme
   ln_dynadv_ubs = .false. !  flux form - 3rd order UBS      scheme
/
!-----------------------------------------------------------------------
&namdyn_vor    !   Vorticity / Coriolis scheme                          (default: NO selection)
!-----------------------------------------------------------------------
   ln_dynvor_ene = .false. !  energy    conserving scheme
   ln_dynvor_ens = .false. !  enstrophy conserving scheme
   ln_dynvor_mix = .false. !  mixed scheme
   ln_dynvor_enT = .false. !  energy conserving scheme (T-point)
   ln_dynvor_eeT = .false. !  energy conserving scheme (een using e3t)
   ln_dynvor_een = .true.  !  energy & enstrophy scheme
   !
   ln_dynvor_msk = .false. !  vorticity multiplied by fmask (=T)        ==>>> PLEASE DO NOT ACTIVATE
   !                       !  (f-point vorticity schemes only)
   !
   nn_e3f_typ = 0          !  type of e3f (EEN, ENE, ENS, MIX only)  =0  e3f = mi(mj(e3t))/4
   !                       !                                         =1  e3f = mi(mj(e3t))/mi(mj( tmask))
/
!-----------------------------------------------------------------------
&namdyn_hpg    !   Hydrostatic pressure gradient option                 (default: NO selection)
!-----------------------------------------------------------------------
   ln_hpg_zco  = .false.   !  z-coordinate - full steps
   ln_hpg_zps  = .true.    !  z-coordinate - partial steps (interpolation)
   ln_hpg_sco  = .false.   !  s-coordinate (standard jacobian formulation)
   ln_hpg_isf  = .false.   !  s-coordinate (sco ) adapted to isf
   ln_hpg_djc  = .false.   !  s-coordinate (Density Jacobian with Cubic polynomial)
      ln_hpg_djc_vnh = .true.  !  hor.  bc type for djc scheme (T=von Neumann, F=linear extrapolation)
      ln_hpg_djc_vnv = .true.  !  vert. bc type for djc scheme (T=von Neumann, F=linear extrapolation)
   ln_hpg_prj  = .false.   !  s-coordinate (Pressure Jacobian scheme)
/
!-----------------------------------------------------------------------
&namdyn_spg    !   surface pressure gradient                            (default: NO selection)
!-----------------------------------------------------------------------
   ln_dynspg_exp  = .false.   ! explicit free surface
   ln_dynspg_ts   = .true.    ! split-explicit free surface
      ln_bt_fw      = .false.    ! Forward integration of barotropic Eqs.
      ln_bt_av      = .true.     ! Time filtering of barotropic variables
         nn_bt_flt     = 1          ! Time filter choice  = 0 None
         !                          !                     = 1 Boxcar over   nn_e sub-steps
         !                          !                     = 2 Boxcar over 2*nn_e  "    "
      ln_bt_auto    = .true.     ! Number of sub-step defined from:
         rn_bt_cmax   =  0.7        ! =T : the Maximum Courant Number allowed
         nn_e         = 48          ! =F : the number of sub-step in rn_Dt seconds
      rn_bt_alpha   = 0.         ! Temporal diffusion parameter (if ln_bt_av=F)
/
!-----------------------------------------------------------------------
&namdyn_ldf    !   lateral diffusion on momentum                        (default: NO selection)
!-----------------------------------------------------------------------
   !                       !  Type of the operator :
   ln_dynldf_OFF = .false.     !  No operator (i.e. no explicit diffusion)
   nn_dynldf_typ = 0           !  =0 div-rot (default)   ;   =1 symmetric
   ln_dynldf_lap = .false.     !    laplacian operator
   ln_dynldf_blp = .true.      !  bilaplacian operator
   !                       !  Direction of action  :
   ln_dynldf_lev = .false.     !  iso-level
   ln_dynldf_hor = .true.      !  horizontal  (geopotential)
   ln_dynldf_iso = .false.     !  iso-neutral (lap only)
   !                       !  Coefficient
   nn_ahm_ijk_t  = 20          !  space/time variation of eddy coefficient :
      !                             !  =-30  read in eddy_viscosity_3D.nc file
      !                             !  =-20  read in eddy_viscosity_2D.nc file
      !                             !  =  0  constant
      !                             !  = 10  F(k)=c1d
      !                             !  = 20  F(i,j)=F(grid spacing)=c2d
      !                             !  = 30  F(i,j,k)=c2d*c1d
      !                             !  = 31  F(i,j,k)=F(grid spacing and local velocity)
      !                             !  = 32  F(i,j,k)=F(local gridscale and deformation rate)
      !                        !  time invariant coefficients :  ahm = 1/2  Uv*Lv   (lap case)
      !                             !                            or  = 1/12 Uv*Lv^3 (blp case)
      rn_Uv      = 0.1675591362736114 !  lateral viscous velocity [m/s] (nn_ahm_ijk_t= 0, 10, 20, 30)
      rn_Lv      = 10.e+3             !  lateral viscous length   [m]   (nn_ahm_ijk_t= 0, 10)
      !                       !  Smagorinsky settings  (nn_ahm_ijk_t= 32) :
      rn_csmc       = 3.5         !  Smagorinsky constant of proportionality
      rn_minfac     = 1.0         !  multiplier of theorectical lower limit
      rn_maxfac     = 1.0         !  multiplier of theorectical upper limit
      !                       !  iso-neutral laplacian operator (ln_dynldf_iso=T) :
      rn_ahm_b      = 0.0         !  background eddy viscosity  [m2/s]
!----------------------------------------------------------------------------
!  drakkar comment : for the case  nn_aht_ijk_t = 20 ( only rn_Ud is used )
!                                                              LAP             BILAP
!           ahm[tf](:,:) = fac*Uv * max(e1,e2)(:,:) ^ n    [ fac=1/2, n=1 ; fac=1/12, n=3)
!  In 3.6   ahm[tf](:,:) = rn_ahm_0 * [ max(e1,e2)(:,:)/ max(e1,e2) ] ^ n
!     ===>  rn_Uv = rn_amt_0/fac/MAX(e1,e2)^n
!3.6 : rn_ahm_0_blp     =  -.077e10  !  horizontal bilaplacian eddy viscosity [m4/s] (BSAS12 ref 47.5 N)

!        rn_Uv = 0.077e10 * 12 /(7012)^3 = 0.02683   (bilap )
! comment ORCA05 : ahm_0_blp=-12e11  ==> rn_Uv = 12.e11*12/(55600)^3  =  0.0838 m/s
! comment ORCA025: ahm_0_blp=-1.1e11  ==> rn_Uv = 1.1e11*12/(27800)^3  =  0.06143835
! comment CREG025: ahm_0_blp=-3.0e11  ==> rn_Uv = 3.0e11*12/(27800)^3  =  0.1675591362736114
!----------------------------------------------------------------------------
/

!!======================================================================
!!                     vertical physics namelists                     !!
!!                                                                    !!
!!    namzdf        vertical physics manager                            (default: NO selection)
!!    namzdf_ric    richardson number vertical mixing                   (ln_zdfric=T)
!!    namzdf_tke    TKE vertical mixing                                 (ln_zdftke=T)
!!    namzdf_gls    GLS vertical mixing                                 (ln_zdfgls=T)
!!    namzdf_osm    OSM vertical diffusion                              (ln_zdfosm=T)
!!    namzdf_iwm    tidal mixing parameterization                       (ln_zdfiwm=T)
!!======================================================================
!
!-----------------------------------------------------------------------
&namzdf        !   vertical physics manager                             (default: NO selection)
!-----------------------------------------------------------------------
   !                       ! adaptive-implicit vertical advection
   ln_zad_Aimp = .false.      !  Courant number dependent scheme (Shchepetkin 2015)
   !
   !                       ! type of vertical closure (required)
   ln_zdfcst   = .false.      !  constant mixing
   ln_zdfric   = .false.      !  local Richardson dependent formulation (T =>   fill namzdf_ric)
   ln_zdftke   = .true.       !  Turbulent Kinetic Energy closure       (T =>   fill namzdf_tke)
   ln_zdfgls   = .false.      !  Generic Length Scale closure           (T =>   fill namzdf_gls)
   ln_zdfosm   = .false.      !  OSMOSIS BL closure                     (T =>   fill namzdf_osm)
   !
   !                       ! convection
   ln_zdfevd   = .true.       !  enhanced vertical diffusion
      nn_evdm     =    1         ! apply on tracer (=0) or on tracer and momentum (=1)
      rn_evd      =   10.        ! mixing coefficient [m2/s]
   ln_zdfnpc   = .false.      !  Non-Penetrative Convective algorithm
      nn_npc      =    1         ! frequency of application of npc
      nn_npcp     =  365         ! npc control print frequency
   ln_zdfmfc   = .false.      !  Mass Flux Convection
   !
   ln_zdfddm   = .true.    ! double diffusive mixing
      rn_avts  =    1.e-4     !  maximum avs (vertical mixing on salinity)
      rn_hsbfr =    1.6       !  heat/salt buoyancy flux ratio
   !
   !                       ! gravity wave-driven vertical mixing
   ln_zdfiwm   = .true.       ! internal wave-induced mixing            (T =>   fill namzdf_iwm)
   ln_zdfswm   = .false.      ! surface  wave-induced mixing            (T => ln_wave=ln_sdw=T )
   !
   !                       ! coefficients
   rn_avm0     =   1.4e-6     !  vertical eddy viscosity   [m2/s]       (background Kz if ln_zdfcst=F)
   rn_avt0     =   1.0e-10    !  vertical eddy diffusivity [m2/s]       (background Kz if ln_zdfcst=F)
   nn_avb      =    0         !  profile for background avt & avm (=1) or not (=0)
   nn_havtb    =    0         !  horizontal shape for avtb (=1) or not (=0)
/
!-----------------------------------------------------------------------
&namzdf_ric    !   richardson number dependent vertical diffusion       (ln_zdfric =T)
!-----------------------------------------------------------------------
   rn_avmri    =  100.e-4  !  maximum value of the vertical viscosity
   rn_alp      =    5.     !  coefficient of the parameterization
   nn_ric      =    2      !  coefficient of the parameterization
   ln_mldw     =  .false.  !  enhanced mixing in the Ekman layer
      rn_ekmfc    =    0.7    !  Factor in the Ekman depth Equation
      rn_mldmin   =    1.0    !  minimum allowable mixed-layer depth estimate (m)
      rn_mldmax   = 1000.0    !  maximum allowable mixed-layer depth estimate (m)
      rn_wtmix    =   10.0    !  vertical eddy viscosity coeff [m2/s] in the mixed-layer
      rn_wvmix    =   10.0    !  vertical eddy diffusion coeff [m2/s] in the mixed-layer
/
!-----------------------------------------------------------------------
&namzdf_tke    !   turbulent eddy kinetic dependent vertical diffusion  (ln_zdftke =T)
!-----------------------------------------------------------------------
   rn_ediff    =   0.1     !  coef. for vertical eddy coef. (avt=rn_ediff*mxl*sqrt(e) )
   rn_ediss    =   0.7     !  coef. of the Kolmogoroff dissipation
   rn_ebb      =  67.83    !  coef. of the surface input of tke (=67.83 suggested when ln_mxl0=T)
   rn_emin     =   1.e-10  !  minimum value of tke [m2/s2]
   rn_emin0    =   1.e-4   !  surface minimum value of tke [m2/s2]
   rn_bshear   =   1.e-20  ! background shear (>0) currently a numerical threshold (do not change it)
   nn_pdl      =   1       !  Prandtl number function of richarson number (=1, avt=pdl(Ri)*avm) or not (=0, avt=avm)
   nn_mxl      =   3       !  mixing length: = 0 bounded by the distance to surface and bottom
   !                       !                 = 1 bounded by the local vertical scale factor
   !                       !                 = 2 first vertical derivative of mixing length bounded by 1
   !                       !                 = 3 as =2 with distinct dissipative an mixing length scale
   ln_mxl0     = .true.    !  surface mixing length scale = F(wind stress) (T) or not (F)
      nn_mxlice    = 3        ! type of scaling under sea-ice
      !                       !    = 0 no scaling under sea-ice
      !                       !    = 1 scaling with constant sea-ice thickness
      !                       !    = 2 scaling with mean sea-ice thickness ( only with SI3 sea-ice model )
      !                       !    = 3 scaling with maximum sea-ice thickness
      rn_mxlice   = 10.       ! max constant ice thickness value when scaling under sea-ice ( nn_mxlice=1)
   rn_mxl0     =   0.01    !  surface  buoyancy lenght scale minimum value
   ln_mxhsw    = .false.   !  surface mixing length scale = F(wave height)
   ln_lc       = .true.    !  Langmuir cell parameterisation (Axell 2002)
      rn_lc       =   0.15    !  coef. associated to Langmuir cells
   nn_etau     =   1       !  penetration of tke below the mixed layer (ML) due to NIWs
   !                          !        = 0 none ; = 1 add a tke source below the ML
   !                          !        = 2 add a tke source just at the base of the ML
   !                          !        = 3 as = 1 applied on HF part of the stress           (ln_cpl=T)
      rn_efr      =   0.05    !  fraction of surface tke value which penetrates below the ML (nn_etau=1 or 2)
      nn_htau     =   1       !  type of exponential decrease of tke penetration below the ML
      !                       !        = 0  constant 10 m length scale
      !                       !        = 1  0.5m at the equator to 30m poleward of 40 degrees
   nn_eice     =   0       !  attenutaion of langmuir & surface wave breaking under ice
   !                       !           = 0 no impact of ice cover on langmuir & surface wave breaking
   !                       !           = 1 weigthed by 1-TANH(10*fr_i)
   !                       !           = 2 weighted by 1-fr_i
   !                       !           = 3 weighted by 1-MIN(1,4*fr_i)   
   nn_bc_surf   =     1    !  surface condition (0/1=Dir/Neum) ! Only applicable for wave coupling (ln_cplwave=1)
   nn_bc_bot    =     1    !  bottom condition (0/1=Dir/Neum) ! Only applicable for wave coupling (ln_cplwave=1)
/
!-----------------------------------------------------------------------
&namosm_mle    !   mixed layer eddy parametrisation (Fox-Kemper)       (default: OFF)
!-----------------------------------------------------------------------
   rn_osm_mle_ce       = 0.06      ! magnitude of the MLE (typical value: 0.06 to 0.08)
   nn_osm_mle          = 0         ! MLE type: =0 standard Fox-Kemper ; =1 new formulation
   rn_osm_mle_lf       = 5.e+3     ! typical scale of mixed layer front (meters)                      (case rn_osm_mle=0)
   rn_osm_mle_time     = 43200.    ! time scale for mixing momentum across the mixed layer (seconds)  (case rn_osm_mle=0)
   rn_osm_mle_lat      = 20.       ! reference latitude (degrees) of MLE coef.                        (case rn_mle=1)
   rn_osm_mle_rho_c    = 0.03      ! delta rho criterion used to calculate MLD for FK
   rn_osm_mle_thresh   = 0.0001    ! delta b criterion used for FK MLE criterion
   rn_osm_mle_tau      = 172800.   ! time scale for FK-OSM (seconds)  (case rn_osm_mle=0)
   ln_osm_hmle_limit   = .true.    ! If true, limit hmle to rn_osm_hmle_limit*hbl
   rn_osm_hmle_limit   = 1.5
   /
!-----------------------------------------------------------------------
&namzdf_mfc     !   Mass Flux Convection
!-----------------------------------------------------------------------
   ln_edmfuv  = .false.        ! Activate on velocity fields (Not available yet)
   rn_cemf    =  1.            ! entrain/detrain coef. (<0 => cte; >0 % depending on dW/dz
   rn_cwmf    = -0.            ! entrain/detrain coef. (<0 => cte; >0 % depending on dW/dz
   rn_cent    = 2.e-5          ! entrain of convective area
   rn_cdet    = 3.e-5          ! detrain of convective area 
   rn_cap     = 0.9            ! Coef. for CAP estimation
   App_max    = 0.1            ! Maximum convection area (% of the cell)
/
!-----------------------------------------------------------------------
&namzdf_iwm    !    internal wave-driven mixing parameterization        (ln_zdfiwm =T)
!-----------------------------------------------------------------------
   ln_mevar    = .true.    !  variable (T) or constant (F) mixing efficiency
   ln_tsdiff   = .true.    !  account for differential T/S mixing (T) or not (F)

   cn_dir      = './'      !  root directory for the iwm data location                                                                           
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   sn_mpb      = 'CREG025.L75_mixing_power_bot_20220617'  , -12. , 'mixing_power_bot' , .false.  , .true. , 'yearly' , '' , ''  , ''
   sn_mpc      = 'CREG025.L75_mixing_power_cri_20220617'  , -12. , 'mixing_power_cri' , .false.  , .true. , 'yearly' , '' , ''  , ''
   sn_mpn      = 'CREG025.L75_mixing_power_nsq_20220617'  , -12. , 'mixing_power_nsq' , .false.  , .true. , 'yearly' , '' , ''  , ''
   sn_mps      = 'CREG025.L75_mixing_power_sho_20220617'  , -12. , 'mixing_power_sho' , .false.  , .true. , 'yearly' , '' , ''  , ''
   sn_dsb      = 'CREG025.L75_decay_scale_bot_20220627'   , -12. , 'decay_scale_bot'  , .false.  , .true. , 'yearly' , '' , ''  , ''
   sn_dsc      = 'CREG025.L75_decay_scale_cri_20221027'   , -12. , 'decay_scale_cri'  , .false.  , .true. , 'yearly' , '' , ''  , ''
/
!!======================================================================
!!                  ***  Diagnostics namelists  ***                   !!
!!                                                                    !!
!!   namtrd       dynamics and/or tracer trends                         (default: OFF)
!!   namhsb       Heat and salt budgets                                 (default: OFF)
!!   namdiu       Cool skin and warm layer models                       (default: OFF)
!!   namdiu       Cool skin and warm layer models                       (default: OFF)
!!   namflo       float parameters                                      (default: OFF)
!!   nam_diadct   transports through some sections                      (default: OFF)
!!   nam_dia25h   25h Mean Output                                       (default: OFF)
!!   namnc4       netcdf4 chunking and compression settings             ("key_netcdf4")
!!======================================================================
!
!-----------------------------------------------------------------------
&namtrd        !   trend diagnostics                                    (default: OFF)
!-----------------------------------------------------------------------
   ln_glo_trd  = .false.   ! (T) global domain averaged diag for T, T^2, KE, and PE
   ln_dyn_trd  = .false.   ! (T) 3D momentum trend output
   ln_dyn_mxl  = .false.   ! (T) 2D momentum trends averaged over the mixed layer (not coded yet)
   ln_vor_trd  = .false.   ! (T) 2D barotropic vorticity trends (not coded yet)
   ln_KE_trd   = .false.   ! (T) 3D Kinetic   Energy     trends
   ln_PE_trd   = .false.   ! (T) 3D Potential Energy     trends
   ln_tra_trd  = .false.   ! (T) 3D tracer trend output
   ln_tra_mxl  = .false.   ! (T) 2D tracer trends averaged over the mixed layer (not coded yet)
   nn_trd      = 365       !  print frequency (ln_glo_trd=T) (unit=time step)
/
!!gm   nn_ctls     =   0       !  control surface type in mixed-layer trends (0,1 or n<jpk)
!!gm   rn_ucf      =   1.      !  unit conversion factor (=1 -> /seconds ; =86400. -> /day)
!!gm   cn_trdrst_in      = "restart_mld"   ! suffix of ocean restart name (input)
!!gm   cn_trdrst_out     = "restart_mld"   ! suffix of ocean restart name (output)
!!gm   ln_trdmld_restart = .false.         !  restart for ML diagnostics
!!gm   ln_trdmld_instant = .false.         !  flag to diagnose trends of instantantaneous or mean ML T/S
!!gm
!-----------------------------------------------------------------------
&namhsb        !  Heat and salt budgets                                 (default: OFF)
!-----------------------------------------------------------------------
   ln_diahsb   = .false.   !  output the heat and salt budgets (T) or not (F)
/
!-----------------------------------------------------------------------
&namdiu        !   Cool skin and warm layer models                      (default: OFF)
!-----------------------------------------------------------------------
   ln_diurnal      = .false.   !
   ln_diurnal_only = .false.   !
/
!-----------------------------------------------------------------------
&namflo        !   float parameters                                     (default: OFF)
!-----------------------------------------------------------------------
   ln_floats   = .false.      ! activate floats or not
      jpnfl       = 1         !    total number of floats during the run
      jpnnewflo   = 0         !    number of floats for the restart
      ln_rstflo   = .false.   !    float restart (T) or not (F)
      nn_writefl  =      75   !    frequency of writing in float output file
      nn_stockfl  =    5475   !    frequency of creation of the float restart file
      ln_argo     = .false.   !    Argo type floats (stay at the surface each 10 days)
      ln_flork4   = .false.   !    trajectories computed with a 4th order Runge-Kutta (T)
      !                       !    or computed with Blanke' scheme (F)
      ln_ariane   = .true.    !    Input with Ariane tool convention(T)
      ln_flo_ascii= .true.    !    Output with Ariane tool netcdf convention(F) or ascii file (T)
/
!-----------------------------------------------------------------------
&nam_diadct    !   transports through some sections                     (default: OFF)
!-----------------------------------------------------------------------
    ln_diadct  = .false.   ! Calculate transport thru sections or not
       nn_dct     = 15     !  time step frequency for transports computing
       nn_dctwri  = 15     !  time step frequency for transports writing
       nn_secdebug = 112   !      0 : no section to debug
       !                   !     -1 : debug all section
       !                   !  0 < n : debug section number n
/
!-----------------------------------------------------------------------
&nam_dia25h    !  25h Mean Output                                       (default: OFF)
!-----------------------------------------------------------------------
   ln_dia25h   = .false.   ! Choose 25h mean output or not
/
!-----------------------------------------------------------------------
&namnc4        !   netcdf4 chunking and compression settings            ("key_netcdf4")
!-----------------------------------------------------------------------
   nn_nchunks_i =   1       !  number of chunks in i-dimension
   nn_nchunks_j =   1       !  number of chunks in j-dimension
   nn_nchunks_k =   75      !  number of chunks in k-dimension
   !                       !  setting nn_nchunks_k = jpk will give a chunk size of 1 in the vertical which
   !                       !  is optimal for postprocessing which works exclusively with horizontal slabs
   ln_nc4zip   = .true.    !  (T) use netcdf4 chunking and compression
   !                       !  (F) ignore chunking information and produce netcdf3-compatible files
/

!!======================================================================
!!                  ***  Miscellaneous namelists  ***                 !!
!!                                                                    !!
!!   nammpp            Massively Parallel Processing
!!   namctl            Control prints                                   (default: OFF)
!!   namsto            Stochastic parametrization of EOS                (default: OFF)
!!======================================================================
!
!-----------------------------------------------------------------------
&nammpp        !   Massively Parallel Processing
!-----------------------------------------------------------------------
   ln_listonly =  .false.  !  do nothing else than listing the best domain decompositions (with land domains suppression)
   !                       !  if T: the largest number of cores tested is defined by max(mppsize, jpni*jpnj)
   ln_nnogather =  .false. !  activate code to avoid mpi_allgather use at the northfold
   jpni        =  14       !  number of processors following i (set automatically if < 1), see also ln_listonly = T
   jpnj        =  19       !  number of processors following j (set automatically if < 1), see also ln_listonly = T
   nn_hls      =   1       !  halo width (applies to both rows and columns)
   nn_comm     =   1       !  comm choice
/
!-----------------------------------------------------------------------
&namctl        !   Control prints                                       (default: OFF)
!-----------------------------------------------------------------------
   sn_cfctl%l_runstat = .TRUE.    ! switches and which areas produce reports with the proc integer settings.
   sn_cfctl%l_trcstat = .FALSE.   ! The default settings for the proc integers should ensure
   sn_cfctl%l_oceout  = .FALSE.   ! that  all areas report.
   sn_cfctl%l_layout  = .FALSE.   !
   sn_cfctl%l_prtctl  = .FALSE.   !
   sn_cfctl%l_prttrc  = .FALSE.   !
   sn_cfctl%l_oasout  = .FALSE.   !
   sn_cfctl%procmin   = 0         ! Minimum area number for reporting [default:0]
   sn_cfctl%procmax   = 1000000   ! Maximum area number for reporting [default:1000000]
   sn_cfctl%procincr  = 1         ! Increment for optional subsetting of areas [default:1]
   sn_cfctl%ptimincr  = 1         ! Timestep increment for writing time step progress info
   nn_ictls    =    250           !  start i indice of control sum (use to compare mono versus
   nn_ictle    =    250           !  end   i indice of control sum        multi processor runs
   nn_jctls    =    100             !  start j indice of control               over a subdomain)
   nn_jctle    =    100             !  end   j indice of control
   nn_isplt    =    19            !  number of processors in i-direction
   nn_jsplt    =    14            !  number of processors in j-direction
   ln_timing   = .false.          !  timing by routine write out in timing.output file
   ln_diacfl   = .false.          !  CFL diagnostics write out in cfl_diagnostics.ascii
/
